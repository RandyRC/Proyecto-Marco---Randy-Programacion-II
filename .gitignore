## Ignorar archivos temporales de Visual Studio, generar resultados y
## archivos generados por complementos populares de Visual Studio.
##
## Obtén lo último de https://github.com/github/gitignore/blob/main/VisualStudio.gitignore

# Archivos específicos del usuario
*.rsuser
*.suo
*.usuario
*.userosscache
*.sln.docstates

# Archivos específicos del usuario (MonoDevelop/Xamarin Studio)
*.userprefs

# Archivos generados automáticamente mono
mono_crash.*

# Generar resultados
[Dd] ebug/
[Dd] ebugPublic/
[Rr] elease/
[Rr] eleases/
x64/
x86/
[Ww] [ii] [Nn] 32/
[Aa] [Rr] [milímetros]/
[Aa] [Rr] [milímetro] 64/
Bld/
[Bb] en/
[Oo] bj/
[Ll] Og/
[Ll] ogs/

# Directorio de opciones/caché de Visual Studio 2015/2017
.vs/
# Quitar comentarios si tiene tareas que crean los archivos estáticos del proyecto en wwwroot
#wwwroot/

# Archivos generados automáticamente de Visual Studio 2017
Generado\ Archivos/

# Resultados de la prueba MSTest
[Tt] est[Rr]esult*/
[Bb] uild[Ll]og.*

# NUnit
*. VisualState.xml
TestResult.xml
nunit-*.xml

# Generar resultados de un proyecto ATL
[Dd] ebugPS/
[Rr] eleasePS/
dlldata.c

# Resultados de benchmark
BenchmarkDotNet.Artifacts/

# .NET Core
proyecto.lock.json
proyecto.fragment.lock.json
Artefactos/

# ASP.NET Andamios
AndamioReadMe.txt

# StyleCop
StyleCopReport.xml

# Archivos creados por Visual Studio
*_i.c
*_p.c
*_h.h
*.ilk
*.meta
*.obj
*.iobj
*.pch
*.pdb
*.ipdb
*.pgc
*.pgd
*.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp
*.tmp_proj
*_wpftmp.csproj
*.log
*.tlog
*.vspscc
*.vssscc
.builds
*.pidb
*.svclog
*.scc

# Archivos de prueba de Chutzpah
_Chutzpah*

# Archivos de caché de Visual C++
ipch/
*.aps
*.ncb
*.opendb
*.opensdf
*.sdf
*.cachefile
*. VC.db
*. VC.VC.opendb

# Generador de perfiles de Visual Studio
*.psess
*.vsp
*.vspx
*.sap

# Archivos de seguimiento de Visual Studio
*.e2e

# Área de trabajo local de TFS 2012
$tf/

# Kit de herramientas de automatización de orientación
*.gpState

# ReSharper es un complemento de codificación de .NET
_ReSharper*/
*. [Rr] e[Ss]harper
*. DotSettings.user

# TeamCity es un complemento de compilación
_TeamCity*

# DotCover es una herramienta de cobertura de código
*.dotCover

# AxoCover es una herramienta de cobertura de código
.axoCover/*
! .axoCover/settings.json

# Coverlet es una herramienta de cobertura de código gratuita y multiplataforma
cobertura*.json
cobertura*.xml
cobertura*.info

# Resultados de la cobertura de código de Visual Studio
*.cobertura
*.coveragexml

# NCrunch
_NCrunch_*
. *crunch*.local.xml
nCrunchTemp_*

# MightyMoose
*.mm.*
AutoTest.Net/

# Banco de trabajo web (sass)
.sass-cache/

# Carpeta de salida Installshield
[Ee] xpress/

# DocProject es un complemento generador de documentación
DocProject/buildhelp/
DocProyecto/Ayuda/*. HxT
DocProyecto/Ayuda/*. HxC
DocProyecto/Ayuda/*.hhc
DocProyecto/Ayuda/*.hhk
DocProject/Ayuda/*.hhp
DocProyecto/Ayuda/Html2
DocProyecto/Ayuda/html

# Directorio Click-Once
publicar/

# Publicar resultados web
*. [Págs. ] ublish.xml
*.azurePubxml
# Nota: Comente la siguiente línea si desea registrar la configuración de implementación web,
# pero las cadenas de conexión de la base de datos (con posibles contraseñas) no se cifrarán
*.pubxml
*.publishproj

# Configuración de publicación de aplicaciones web de Microsoft Azure. Comenta la siguiente línea si quieres
# proteger la configuración de publicación de Azure Web App, pero contiene información confidencial
# en estos scripts no se cifrará
PublishScripts/

# Paquetes nuGet
*.nupkg
# Paquetes de símbolos nuGet
*.snupkg
# La carpeta de paquetes se puede omitir debido a Package Restore
**/[Págs. ] ackages/*
# excepto build/, que se utiliza como destino de MSBuild.
! **/[Pp]ackages/build/
# Sin comentarios si es necesario, sin embargo, generalmente se regenerará cuando sea necesario
#!**/[Pp]ackages/repositories.config
# Los archivos project.json de NuGet v3 producen más archivos ignorables
*.nuget.props
*.nuget.targets

# Resultados de compilación de Microsoft Azure
csx/
*.build.csdef

# Emulador de Microsoft Azure
Ecf/
Rcf/

# Directorios y archivos de paquetes de aplicaciones de la Tienda Windows
AppPackages/
BundleArtifacts/
Package.StoreAssociation.xml
_pkginfo.txt
*.appx
*.appxbundle
*.appxupload

# Archivos de caché de Visual Studio
# los archivos que terminan en .cache se pueden ignorar
*. [Cc] dolor
# pero realiza un seguimiento de los directorios que terminan en .cache
! ?*. [Cc] dolor/

# Otros
ClientBin/
~$*
*~
*.dbmdl
*.dbproj.schemaview
*.jfm
*.pfx
*.publishsettings
orleans.codegen.cs

# Incluir archivos de nombre seguro puede presentar un riesgo para la seguridad
# (https://github.com/github/gitignore/pull/2483#issue-259490424)
#*.snk

# Dado que hay varios flujos de trabajo, quite los comentarios de la siguiente línea para ignorar bower_components
# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)
#bower_components/

# Proyectos RIA/Silverlight
Generated_Code/

# Copia de seguridad e informe de archivos de la conversión de un archivo de proyecto antiguo
# a una versión más reciente de Visual Studio. Los archivos de copia de seguridad no son necesarios,
# porque tenemos git ;-)
_UpgradeReport_Files/
Copia de seguridad*/
UpgradeLog*.XML
UpgradeLog*.htm
ServiceFabricBackup/
*.rptproj.bak

# Archivos de SQL Server
*.mdf
*.ldf
*.ndf

# Proyectos de Business Intelligence
*.rdl.data
*.bim.layout
*.bim_*.settings
*.rptproj.rsuser
*- [Bb] ackup.rdl
*- [Bb] ackup ([0-9]).rdl
*- [Bb] ackup ([0-9][0-9]).rdl

# Falsificaciones de Microsoft
FakesAssemlabes/

# Archivo de configuración del plugin GhostDoc
*. GhostDoc.xml

# Herramientas de node.js para Visual Studio
.ntvs_analysis.dat
node_modules/

# Registro de compilación de Visual Studio 6
*.plg

# Archivo de opciones del área de trabajo de Visual Studio 6
*.opt

# Archivo de área de trabajo generado automáticamente por Visual Studio 6 (contiene qué archivos estaban abiertos, etc.)
*.vbw

# Archivo de proyecto generado automáticamente de Visual Studio 6 (contiene qué archivos se abrieron, etc.)
*.vbp

# Área de trabajo y archivo de proyecto de Visual Studio 6 (archivos de proyecto de trabajo que contienen archivos para incluir en el proyecto)
*.dsw
*.dsp

# Archivos técnicos de Visual Studio 6
*.ncb
*.aps

# Resultado de compilación de Visual Studio LightSwitch
**/*. HTMLClient/GeneratedArtifacts
**/*. DesktopClient/GeneratedArtifacts
**/*. DesktopClient/ModelManifest.xml
**/*. Servidor/Artefactos Generados
**/*. Servidor/ModelManifest.xml
_Pvt_Extensions

# Administrador de dependencias de Paket
.paket/paket.exe
paket-files/

# FALSO - F# Make
.fake/

# Configuración personal de CodeRush
.cr/personal

# Herramientas de Python para Visual Studio (PTVS)
__pycache__/
*.pyc

# Pastel - Quita el comentario si lo estás usando
# herramientas/**
# !tools/packages.config

# Estudio de pestañas
*.tss

# Archivo de configuración JustMock de Telerik
*.jmconfig

# Resultado de compilación de BizTalk
*.btp.cs
*.btm.cs
*.odx.cs
*.xsd.cs

# Resultados del análisis de la interfaz de usuario de OpenCover
OpenCover/

# Resultado de ejecución local de Azure Stream Analytics
ASALocalRun/

# Registro binario y estructurado de MSBuild
*.binlog

# Archivo de configuración del depurador de GPU NVidia Nsight
*.nvuser

# Carpeta de trabajo de MFractors (herramienta de productividad de Xamarin)
.mfractor/

# Historial local de Visual Studio
.localhistory/

# Archivos de historial de Visual Studio (VSHistory)
.vshistory/

# Base de datos temp de comprobación de estado de BeatPulse
comprobación de estadodb

# Carpeta de copia de seguridad para la herramienta Conversión de referencia de paquete en Visual Studio 2017
MigraciónCopia de seguridad/

# Carpeta de trabajo Ionide (herramientas multiplataforma de F# VS Code)
.ionide/

# Fody - esquema XML generado automáticamente
FodyWeavers.xsd

# VS Code para aquellos que trabajan en múltiples herramientas
.vscode/*
! .vscode/settings.json
! .vscode/tasks.json
! .vscode/launch.json
! .vscode/extensions.json
*.code-workspace

# Historial local de Visual Studio Code
.historia/

# Archivos de Windows Installer a partir de resultados de compilación
*.cab
*.msi
*.msix
*.msm
*.msp

# Piloto de JetBrains
*.sln.iml